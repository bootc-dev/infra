name: Sync common files
on:
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Test mode - only sync to ci-sandbox'
        type: boolean
        default: false
  push:
    branches:
      - main
    paths:
      - 'common/**'
      - '.github/workflows/sync-common.yml'

# Prevent multiple workflow runs from racing
concurrency: ${{ github.workflow }}

permissions:
  contents: read

jobs:
  init:
    name: Discover repositories
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get-repos.outputs.matrix }}
    steps:
      - name: Generate Actions Token
        id: token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Checkout
        uses: actions/checkout@v5

      - name: Get repository list
        id: get-repos
        uses: actions/github-script@v8
        with:
          github-token: ${{ steps.token.outputs.token }}
          script: |
            const repos = await github.paginate(github.rest.repos.listForOrg, {
              org: context.repo.owner,
              type: 'all',
              per_page: 100
            });

            // Filter out archived repos and this repo itself
            let activeRepos = repos.filter(repo =>
              !repo.archived &&
              repo.name !== context.repo.repo &&
              !repo.name.startsWith('.')
            );

            // Test mode - only sync to ci-sandbox
            const testMode = '${{ github.event.inputs.test_mode }}' === 'true';
            if (testMode) {
              console.log('Test mode enabled - only syncing to ci-sandbox');
              activeRepos = activeRepos.filter(repo => repo.name === 'ci-sandbox');
            }

            const matrix = activeRepos.map(repo => ({
              repo: repo.name,
              full_name: repo.full_name
            }));

            console.log('Discovered repositories:', matrix);
            core.setOutput('matrix', JSON.stringify(matrix));

  sync:
    name: Sync to ${{ matrix.repo }}
    needs: init
    if: needs.init.outputs.matrix != '[]'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.init.outputs.matrix) }}
    steps:
      - name: Generate Actions Token
        id: token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: ${{ matrix.repo }}

      - name: Checkout infra repository
        uses: actions/checkout@v5
        with:
          path: infra

      - name: Checkout target repository
        uses: actions/checkout@v5
        with:
          repository: ${{ matrix.full_name }}
          token: ${{ steps.token.outputs.token }}
          path: repo

      - name: Sync common files to repository
        run: |
          cd infra
          CURRENT_COMMIT="${{ github.sha }}"

          # Get the last synced commit from target repo
          if [ -f "../repo/.bootc-dev-infra-commit.txt" ]; then
            PREVIOUS_COMMIT=$(cat ../repo/.bootc-dev-infra-commit.txt)
            echo "Previous sync: $PREVIOUS_COMMIT"
            echo "Current commit: $CURRENT_COMMIT"

            # Generate patch for changes to common/ directory
            # Strip the 'common/' prefix so patch applies to repo root
            git diff "$PREVIOUS_COMMIT" "$CURRENT_COMMIT" -- common/ | \
              sed 's|a/common/|a/|g; s|b/common/|b/|g' > ../changes.patch

            # Apply the patch to target repo only if there are changes
            if [ -s ../changes.patch ]; then
              echo "Applying patch:"
              cat ../changes.patch
              cd ../repo
              patch -p1 < ../changes.patch

              # Update the commit marker only when we applied changes
              echo "$CURRENT_COMMIT" > .bootc-dev-infra-commit.txt
            else
              echo "No changes in common/ directory, skipping"
            fi
          else
            # First sync - copy everything
            echo "First sync - copying all files"
            cd ../repo
            rsync -av ../infra/common/ .

            # Update the commit marker
            echo "$CURRENT_COMMIT" > .bootc-dev-infra-commit.txt
          fi

      - name: Open pull request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ steps.token.outputs.token }}
          path: repo
          branch: sync-common-files
          commit-message: |
            Sync common files from infra repository

            Synchronized from ${{ github.repository }}@${{ github.sha }}.
          title: Sync common files from infra repository
          body: |
            Created by [GitHub workflow](${{ github.server_url }}/${{ github.repository }}/actions/workflows/sync-common.yml) ([source](${{ github.server_url }}/${{ github.repository }}/blob/main/.github/workflows/sync-common.yml)).

            This PR synchronizes common files from the [infra repository](${{ github.server_url }}/${{ github.repository }}/tree/main/common).

            Synchronized from ${{ github.repository }}@${{ github.sha }}.
          committer: "bootc-dev Bot <bot@bootc.dev>"
          author: "bootc-dev Bot <bot@bootc.dev>"
          signoff: true
